apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: In
                    values:
                      - pool-jenkins-6fqrm
      containers:
        - name: jenkins
          image: jenkins/jenkins:lts
          securityContext:
            runAsUser: 0  # root для доступа к Docker
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 50000
              name: jnlp
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: docker-cli
              mountPath: /usr/bin/docker
          env:
            - name: DOCKER_HOST
              value: "unix:///var/run/docker.sock"  # Указываем на DinD
        - name: dind
          image: docker:dind
          args: ["--host", "unix:///var/run/docker.sock"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
      volumes:
        - name: jenkins-home
          persistentVolumeClaim:
            claimName: jenkins-home
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock  # Явно указываем путь на хосте
            type: Socket
        - name: dind-storage
          emptyDir: {}
        - name: docker-cli  # Добавляем Docker CLI с хоста
          hostPath:
            path: /usr/bin/docker

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
spec:
  type: LoadBalancer
  selector:
    app: jenkins
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: jnlp
      port: 50000
      targetPort: 50000